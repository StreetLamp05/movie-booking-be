"""the rest

Revision ID: dbdbcfbf5c02
Revises: d6bd0a29d0f6
Create Date: 2025-10-28 19:49:55.717366

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dbdbcfbf5c02'
down_revision = 'd6bd0a29d0f6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reviews',
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('rating BETWEEN 1 AND 5', name='ck_reviews_rating'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.movie_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('review_id')
    )
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_index('ix_reviews_movie_id', ['movie_id'], unique=False)
        batch_op.create_index('ix_reviews_user_id', ['user_id'], unique=False)

    op.create_table('seats',
    sa.Column('seat_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('auditorium_id', sa.Integer(), nullable=False),
    sa.Column('row_label', sa.String(length=8), nullable=False),
    sa.Column('seat_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['auditorium_id'], ['auditoriums.auditorium_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('seat_id'),
    sa.UniqueConstraint('auditorium_id', 'row_label', 'seat_number', name='uq_seat_in_auditorium')
    )
    with op.batch_alter_table('seats', schema=None) as batch_op:
        batch_op.create_index('ix_seats_auditorium', ['auditorium_id'], unique=False)

    op.create_table('bookings',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('showtime_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'EXPIRED', name='booking_status_enum'), nullable=False),
    sa.Column('total_cents', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('total_cents >= 0', name='ck_booking_total_nonneg'),
    sa.ForeignKeyConstraint(['showtime_id'], ['showtimes.showtime_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('booking_id')
    )
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.create_index('ix_bookings_showtime_id', ['showtime_id'], unique=False)
        batch_op.create_index('ix_bookings_user_id', ['user_id'], unique=False)

    op.create_table('seat_holds',
    sa.Column('hold_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('showtime_id', sa.UUID(), nullable=False),
    sa.Column('seat_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('hold_expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('released_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.seat_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['showtime_id'], ['showtimes.showtime_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('hold_id')
    )
    with op.batch_alter_table('seat_holds', schema=None) as batch_op:
        batch_op.create_index('ix_seat_holds_showtime_id', ['showtime_id'], unique=False)
        batch_op.create_index('ix_seat_holds_user_id', ['user_id'], unique=False)

    op.create_table('tickets',
    sa.Column('ticket_id', sa.UUID(), nullable=False),
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('showtime_id', sa.UUID(), nullable=False),
    sa.Column('seat_id', sa.Integer(), nullable=False),
    sa.Column('price_cents', sa.Integer(), nullable=False),
    sa.CheckConstraint('price_cents >= 0', name='ck_ticket_price_nonneg'),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.booking_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.seat_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['showtime_id'], ['showtimes.showtime_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticket_id'),
    sa.UniqueConstraint('booking_id', 'seat_id', name='uq_ticket_per_seat_in_booking')
    )
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.create_index('ix_tickets_seat_id', ['seat_id'], unique=False)
        batch_op.create_index('ix_tickets_showtime_id', ['showtime_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.drop_index('ix_tickets_showtime_id')
        batch_op.drop_index('ix_tickets_seat_id')

    op.drop_table('tickets')
    with op.batch_alter_table('seat_holds', schema=None) as batch_op:
        batch_op.drop_index('ix_seat_holds_user_id')
        batch_op.drop_index('ix_seat_holds_showtime_id')

    op.drop_table('seat_holds')
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_index('ix_bookings_user_id')
        batch_op.drop_index('ix_bookings_showtime_id')

    op.drop_table('bookings')
    with op.batch_alter_table('seats', schema=None) as batch_op:
        batch_op.drop_index('ix_seats_auditorium')

    op.drop_table('seats')
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_index('ix_reviews_user_id')
        batch_op.drop_index('ix_reviews_movie_id')

    op.drop_table('reviews')
    # ### end Alembic commands ###
